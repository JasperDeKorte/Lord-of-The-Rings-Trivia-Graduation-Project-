{"version":3,"sources":["assets/lotr_Logo.png","assets/menuSword.png","audioclips/swordDraw.mp3","audioclips/SwordPullOut.mp3","audioclips/awh-disappointed-crowd-sound-effect.mp3","helpers/Sounds.js","pages/startMenu/StartMenu.js","pages/inputPage/InputPage.js","assets/soundOFF.png","assets/soundON.png","pages/optionsPage/OptionsPage.js","assets/crown.png","assets/Clock.png","assets/Gollum.png","assets/loadingBlade.gif","components/QuizQuestions.js","components/QuizFacts.js","pages/quiz/Quiz.js","pages/highscorePage/HighscorePage.js","App.js","reportWebVitals.js","index.js"],"names":["sound1","Howl","src","swordSFX","autoplay","volume","sound2","swordDraw","sound3","fail","StartMenu","soundToggleMute","useContext","SoundContext","motion","div","initial","scaleX","scaleY","animate","exit","className","lotr_Logo","alt","to","whileHover","scale","onClick","sound","play","id","menuSword","InputPage","nameAvatarValue","NameAvatarContext","value","name","onChange","event","setName","target","avatar","setAvatar","OptionsPage","setSound","setSoundIcon","soundON","soundIcon","soundOFF","QuizQuestions","props","questionText","style","padding","QuizFacts","topImage","factText","factTextLine2","factTextline3","bottomImage","nameText","dateOfBirthText","dateOfDeathText","raceText","fontWeight","gollumName","gollumBirth","gollumDeath","gollumRace","Quiz","useState","showFact","setShowFact","counter","setCounter","characters","setCharacters","quotes","setQuotes","movies","setMovies","globalState","GlobalStateContext","useEffect","headers","a","axios","get","responseCharacter","data","docs","responseQuote","responseMovie","fetchData","Gollum","find","character","_id","quoteMrFrodo","quote","movieMrFrodo","movie","characterMrFrodo","moviesDuration","map","runtimeInMinutes","sum","reduce","b","facts","fact","gollum","birth","death","race","crown","dialog","questions","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","React","timer","setInterval","nextQuestion","length","clearInterval","clock","loadingBlade","transition","duration","score","localStorage","setItem","saveEdit","setSaveEdit","setScore","fontSize","answerOption","handleAnswerButtonClick","Highscore","getItem","createContext","App","Provider","AnimatePresence","exitBeforeEnter","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c793af65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lotr_Logo.64a8db1c.png\";","export default __webpack_public_path__ + \"static/media/menuSword.acd87dba.png\";","export default __webpack_public_path__ + \"static/media/swordDraw.121bcafb.mp3\";","export default __webpack_public_path__ + \"static/media/SwordPullOut.248a3b33.mp3\";","export default __webpack_public_path__ + \"static/media/awh-disappointed-crowd-sound-effect.2c7df37d.mp3\";","import {Howl} from \"howler\";\r\nimport swordDraw from \"../audioclips/swordDraw.mp3\";\r\nimport swordSFX from \"../audioclips/SwordPullOut.mp3\";\r\nimport fail from \"../audioclips/awh-disappointed-crowd-sound-effect.mp3\";\r\n\r\nexport const sound1 = new Howl({\r\n    src: [swordSFX],\r\n    autoplay: false,\r\n    volume: 0.2,\r\n})\r\nexport const sound2 = new Howl({\r\n    src: [swordDraw],\r\n    autoplay: false,\r\n    volume: 0.2,\r\n})\r\n\r\nexport const sound3 = new Howl({\r\n    src: [fail],\r\n    autoplay: false,\r\n    volume: 0.2,\r\n\r\n})","import React, { useContext } from \"react\";\r\nimport {\r\n    Link,\r\n    NavLink,\r\n} from \"react-router-dom\";\r\nimport { motion } from 'framer-motion'\r\nimport { SoundContext } from \"../../App\";\r\nimport lotr_Logo from \"../../assets/lotr_Logo.png\"\r\nimport menuSword from \"../../assets/menuSword.png\"\r\nimport {sound1} from \"../../helpers/Sounds\";\r\n\r\nexport default function StartMenu() {\r\n    const soundToggleMute = useContext(SoundContext)\r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{scaleX: 0, scaleY: 0}}\r\n                animate={{scaleX: 1, scaleY: 1}}\r\n                exit={{scaleX: 0, scaleY: 0}}\r\n            >\r\n                <div className=\"StartMenuButtons\">\r\n                    <div className=\"startMenuButtonlayout\">\r\n                        <div>\r\n                            <img src={lotr_Logo} alt=\"\"/>\r\n                        </div>\r\n                        <NavLink to=\"/InputPage\">\r\n                            <motion.div whileHover={{scale: 1.1}}>\r\n                                <button className=\"mainButtonStyling\" onClick={() =>\r\n                                    {\r\n                                        soundToggleMute.sound && sound1.play()\r\n                                    }\r\n                                }>New Game\r\n                                </button>\r\n                            </motion.div>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className=\"startMenuButtonlayout\">\r\n                        <Link to=\"/OptionsPage\">\r\n                            <motion.div whileHover={{scale: 1.1}}>\r\n                                <button className=\"mainButtonStyling\" onClick={() =>\r\n                                    {\r\n                                        soundToggleMute.sound && sound1.play()\r\n                                    }\r\n                                }>Options\r\n                                </button>\r\n                            </motion.div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"startMenuButtonlayout\">\r\n                        <Link to=\"/Highscore\">\r\n                            <motion.div whileHover={{scale: 1.1}}>\r\n                                <button className=\"mainButtonStyling\" onClick={() =>\r\n                                    {\r\n                                        soundToggleMute.sound && sound1.play()\r\n                                    }\r\n                                }>Highscore\r\n                                </button>\r\n                            </motion.div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"menuSwordsLogo\">\r\n                        <img id=\"menuSword1\" src={menuSword} alt=\"\"/>\r\n                        <h1 id=\"triviaStartMenu\">Trivia</h1>\r\n                        <img id=\"menuSword2\" src={menuSword} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    Link,\r\n    NavLink,\r\n} from \"react-router-dom\";\r\nimport { motion } from 'framer-motion'\r\nimport { NameAvatarContext, SoundContext } from \"../../App\";\r\nimport { sound1, sound2 } from \"../../helpers/Sounds\";\r\nimport menuSword from \"../../assets/menuSword.png\";\r\n\r\nexport default function InputPage() {\r\n    const nameAvatarValue = useContext(NameAvatarContext)\r\n    const soundToggleMute = useContext(SoundContext)\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{scaleY: 0}}\r\n            animate={{scaleY: 1}}\r\n            exit={{scaleY: 0}}\r\n        >\r\n            <img id=\"menuSword1\" src={menuSword} alt=\"\"/>\r\n            <div className=\"\">\r\n                <div className=\"InputPagePlayerInput\">\r\n                    <label className=\"generalTextStyling\">Enter Your Playername</label>\r\n                    <input className=\"mainInputStyling\"\r\n                           value={nameAvatarValue.name}\r\n                           onChange={(event) => nameAvatarValue.setName(event.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"InputPageSelectInput\">\r\n                    <label id=\"selectYourAvatarLabel\" className=\"generalTextStyling\">Select Your Avatar</label>\r\n                        <select className=\"mainInputStyling\" name=\"avaterMenu\" value={nameAvatarValue.avatar}\r\n                                onChange={(event) => nameAvatarValue.setAvatar(event.target.value)}>\r\n                            <option id={\"emoji2\"}>😂</option>\r\n                            <option id={\"emoji3\"}>😎</option>\r\n                            <option id={\"emoji4\"}>✌</option>\r\n                            <option id={\"emoji5\"}>❤</option>\r\n                            <option id={\"emoji6\"}>🙄</option>\r\n                            <option id={\"emoji7\"}>😜</option>\r\n                            <option id={\"emoji8\"}>🎱</option>\r\n                            <option id={\"emoji9\"}>🍔</option>\r\n                            <option id={\"emoji10\"}>🍤</option>\r\n                            <option id={\"emoji-Empty\"}></option>\r\n                        </select>\r\n                </div>\r\n\r\n                <div className=\"InputPageNavButtons\">\r\n                    <Link to=\"/\">\r\n                        <motion.div whileHover={{scale: 1.1}}>\r\n                            <button className=\"mainButtonStyling\" onClick={() => {\r\n                                soundToggleMute.sound && sound2.play()\r\n                            }}>Back\r\n                            </button>\r\n                        </motion.div>\r\n                    </Link>\r\n\r\n                    <NavLink to=\"/Quiz\">\r\n                        <motion.div whileHover={{scale: 1.1}}>\r\n                            <button className=\"mainButtonStyling\" onClick={() => {\r\n                                soundToggleMute.sound && sound1.play()\r\n                            }}>Playerset\r\n                            </button>\r\n                        </motion.div>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <img id=\"menuSword2\" src={menuSword} alt=\"\"/>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/soundOFF.21cc3456.png\";","export default __webpack_public_path__ + \"static/media/soundON.cb22b520.png\";","import React, { useContext } from 'react'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nimport { SoundContext } from \"../../App\";\r\nimport soundOFF from \"../../assets/soundOFF.png\";\r\nimport soundON from \"../../assets/soundON.png\";\r\nimport { sound2 } from \"../../helpers/Sounds\";\r\nimport menuSword from \"../../assets/menuSword.png\";\r\n\r\nexport default function OptionsPage() {\r\n    const soundToggleMute = useContext(SoundContext);\r\n\r\n    function soundToggleOn() {\r\n        soundToggleMute.setSound(true);\r\n        soundToggleMute.setSoundIcon(soundON);\r\n        sound2.play();\r\n    }\r\n    function soundToggleOff() {\r\n        soundToggleMute.setSound(false);\r\n        soundToggleMute.setSoundIcon(soundOFF);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{scaleY: 0}}\r\n                animate={{scaleY: 1}}\r\n                exit={{scaleY: 0}}>\r\n\r\n                <img id=\"menuSword1\" src={menuSword} alt=\"\"/>\r\n                <div className=\"optionsLayoutStyling\">\r\n                    <h1 id=\"OptionsTitle\">Options</h1>\r\n\r\n                    <div className=\"startMenuButtonlayout\">\r\n                        <motion.div whileHover={{scale: 1.1}}>\r\n                            <button className=\"mainButtonStyling\" onClick={() => soundToggleOn()}>Turn sound on</button>\r\n                        </motion.div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <img id=\"soundIcon\" src={soundToggleMute.soundIcon} alt=\"\"/>\r\n                    </div>\r\n\r\n                    <div className=\"startMenuButtonlayout\">\r\n                        <motion.div whileHover={{scale: 1.1}}>\r\n                            <button className=\"mainButtonStyling\" onClick={() => soundToggleOff()}>Turn sound off</button>\r\n                        </motion.div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"OptionsPageButtons\">\r\n                    <Link to=\"/\">\r\n                        <motion.div whileHover={{scale: 1.1}}>\r\n                            <button className=\"mainButtonStyling\" onClick={() => {\r\n                                soundToggleMute.sound && sound2.play()\r\n                            }}>Back\r\n                            </button>\r\n                        </motion.div>\r\n                    </Link>\r\n                </div>\r\n                <img id=\"menuSword2\" src={menuSword} alt=\"\"/>\r\n            </motion.div>\r\n        </>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/crown.48f8a493.png\";","export default __webpack_public_path__ + \"static/media/Clock.23c046ad.png\";","export default __webpack_public_path__ + \"static/media/Gollum.0cf882f1.png\";","export default __webpack_public_path__ + \"static/media/loadingBlade.1aceface.gif\";","import {motion} from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nfunction QuizQuestions(props) {\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <motion.div\r\n                initial={{scaleY: 0}}\r\n                animate={{scaleY: 1}}\r\n                exit={{scaleY: 0}}\r\n            >\r\n\r\n                <h1 className=\"questionTextAllignment\">{props.questionText}</h1>\r\n                <div style={{padding: 20}}></div>\r\n            </motion.div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default QuizQuestions\r\n\r\n","import {motion} from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nfunction QuizFacts(props) {\r\n\r\n    return (\r\n        <div className=\"fact1\">\r\n            <motion.div\r\n                initial={{scaleY: 0}}\r\n                animate={{scaleY: 1}}\r\n                exit={{scaleY: 0}}\r\n            >\r\n                {props.topImage}\r\n                <h2 className=\"randomFact\">{props.factText}</h2>\r\n                <h2 className=\"randomFact\">{props.factTextLine2}</h2>\r\n                <h2 className=\"randomFact\">{props.factTextline3}</h2>\r\n                {props.bottomImage}\r\n                <div style={{padding: 20}}></div>\r\n\r\n                <div className=\"fact-firstItem\">\r\n                    <div className=\"fact-GollumInfo\">\r\n                        <div>{props.nameText}</div>\r\n                        <div>{props.dateOfBirthText} </div>\r\n                        <div>{props.dateOfDeathText}</div>\r\n                        <div>{props.raceText}</div>\r\n                    </div>\r\n\r\n                    <div className=\"fact-GollumInfo\">\r\n                        <div style={{fontWeight: \"bold\"}}> {props.gollumName}</div>\r\n                        <div style={{fontWeight: \"bold\"}}> {props.gollumBirth}</div>\r\n                        <div style={{fontWeight: \"bold\"}}> {props.gollumDeath}</div>\r\n                        <div style={{fontWeight: \"bold\"}}> {props.gollumRace}</div>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default QuizFacts","import React, {useContext, useEffect, useState} from 'react'\r\nimport axios from \"axios\"\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport {motion} from 'framer-motion'\r\nimport {SoundContext, NameAvatarContext, GlobalStateContext} from '../../App'\r\n//--------------------------IMG & SFX Imports---------------------------------\r\nimport {sound1, sound3} from \"../../helpers/Sounds\";\r\nimport crown from \"../../assets/crown.png\"\r\nimport clock from \"../../assets/Clock.png\"\r\nimport gollum from \"../../assets/Gollum.png\"\r\nimport loadingBlade from \"../../assets/loadingBlade.gif\"\r\nimport QuizQuestions from \"../../components/QuizQuestions\";\r\nimport QuizFacts from \"../../components/QuizFacts\";\r\nimport menuSword from \"../../assets/menuSword.png\";\r\n//------------------------------Code-----------------------------------\r\nconst apiKey = 'PQhSLtNXHWFFaBqgDe0y'\r\n\r\nexport default function Quiz() {\r\n\r\n//----------------------useStates and useContexts----------------------\r\n    const [showFact, setShowFact] = useState(true);\r\n    const [counter, setCounter] = useState(30);\r\n    const [characters, setCharacters] = useState(null)\r\n    const [quotes, setQuotes] = useState(null)\r\n    const [movies, setMovies] = useState(null)\r\n\r\n    const nameAvatarValue = useContext(NameAvatarContext);\r\n    const soundToggleMute = useContext(SoundContext)\r\n    const globalState = useContext(GlobalStateContext)\r\n\r\n\r\n//----------------------useEffect API Mounting-------------------------\r\n    useEffect(() => {\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`\r\n        }\r\n\r\n        async function fetchData() {\r\n            const responseCharacter = await axios.get(\"https://the-one-api.dev/v2/character/\", {\r\n                headers: headers\r\n            });\r\n            setCharacters(responseCharacter.data.docs);\r\n\r\n            const responseQuote = await axios.get(\"https://the-one-api.dev/v2/quote/\", {\r\n                headers: headers\r\n            });\r\n            setQuotes(responseQuote.data.docs)\r\n\r\n            const responseMovie = await axios.get(\"https://the-one-api.dev/v2/movie/\", {\r\n                headers: headers\r\n            });\r\n            setMovies(responseMovie.data.docs)\r\n        }\r\n\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n//---------------------------API Data Filtering--------------------------\r\n    const Gollum = characters && characters.find((character) => {\r\n        if (character._id === \"5cd99d4bde30eff6ebccfe9e\")\r\n            return true\r\n\r\n    });\r\n\r\n    const quoteMrFrodo = quotes && quotes.find((quote) => {\r\n        if (quote._id === \"5cd96e05de30eff6ebcce88b\")\r\n            return true\r\n    });\r\n\r\n    const movieMrFrodo = movies && movies.find((movie) => {\r\n        if (movie._id === \"5cd95395de30eff6ebccde5d\")\r\n            return true\r\n    });\r\n\r\n    const characterMrFrodo = characters && characters.find((character) => {\r\n        if (character._id === \"5cd99d4bde30eff6ebccfd0d\")\r\n            return true\r\n    });\r\n\r\n    const moviesDuration = movies && movies.map((movie) => {\r\n        return movie.runtimeInMinutes\r\n\r\n    })\r\n    let sum = movies && moviesDuration.reduce(function (a, b) {\r\n        return a + b;\r\n    }, 0)\r\n\r\n//----------------------SoundEffect Variables----------------------\r\n\r\n\r\n//----------------------Questions and facts arrays-----------------------------------------\r\n    const facts = [\r\n//------------------------------Fact1------------------------------------------------------\r\n        {\r\n            fact:\r\n                <div className=\"fact1\">\r\n                    {characters ?\r\n                        (\r\n                            <QuizFacts\r\n                                factText=\"Gollum, originally knows as Sméagol (or Trahald), was at first a Stoor,\r\n                            on of the three early hobbit types.\"\r\n                                bottomImage={<img id=\"Gollum-img\" src={gollum} alt=\"\"/>}\r\n                                topImage={<img id=\"Gollum-img2\" src={gollum} alt=\"\"/>}\r\n                                nameText=\"Name: \"\r\n                                dateOfBirthText=\"Date of birth: \"\r\n                                dateOfDeathText=\"Date of death: \"\r\n                                raceText=\"Race: \"\r\n                                gollumName={Gollum.name}\r\n                                gollumBirth={Gollum.birth}\r\n                                gollumDeath={Gollum.death}\r\n                                gollumRace={Gollum.race}/>\r\n                        ) : (\r\n                            <h1>Loading...</h1>\r\n                        )\r\n                    }\r\n                </div>\r\n        },\r\n//-----------------------------Fact2----------------------------------------------------\r\n        {\r\n            fact: <div>\r\n                <QuizFacts\r\n                    factText=\"Upon Sauron's defeat, Aragorn was crowned as king Elessar\"\r\n                    topImage={<img id=\"crown\" src={crown} alt=\"\"/>}\r\n                />\r\n            </div>\r\n        },\r\n//-----------------------------Fact3-----------------------------------------------------\r\n        {\r\n            fact: <div className=\"fact2\">\r\n                <>\r\n                    {quotes && <h2>\"{quoteMrFrodo.dialog}\"</h2>}\r\n                    {characters && <cite>- {characterMrFrodo.name}</cite>}\r\n                    {movies && <h3>Movie: {movieMrFrodo.name}</h3>}\r\n                </>\r\n            </div>\r\n        },\r\n//-----------------------------Fact4-----------------------------------------------------\r\n        {\r\n            fact: <div>\r\n                <QuizFacts factText=\"To watch all of the 3 extended editions of TLOTR,\"\r\n                           factTextLine2=\"you would have to spend 11 hours and 21 minutes to finish them,\"\r\n                           factTextline3=\"almost half a day...\"\r\n                />\r\n            </div>\r\n        },\r\n    ]\r\n\r\n\r\n    const questions = [\r\n//----------------------------Question 1------------------------------------------------------\r\n        {\r\n            questionText:\r\n                <QuizQuestions\r\n                    questionText=\"In TLOTR, what does Gollum say when he freaks out again?\"\r\n                />,\r\n            answerOptions: [\r\n                {answerText: \"OMG HELP\", isCorrect: false},\r\n                {answerText: \"IM DYING\", isCorrect: false},\r\n                {answerText: \"GOLLUM\", isCorrect: true},\r\n                {answerText: \"FILTHY HOBBITS\", isCorrect: false},\r\n            ]\r\n        },\r\n//----------------------------Question 2------------------------------------------------------\r\n        {\r\n            questionText: <QuizQuestions\r\n                questionText=\"In the Battle of the Black Gate, what does aragon say when they charge at the orcs?\"\r\n            />,\r\n            answerOptions: [\r\n                {answerText: \"For Asgard\", isCorrect: false},\r\n                {answerText: \"For Frodo\", isCorrect: true},\r\n                {answerText: \"For Gimli\", isCorrect: false},\r\n                {answerText: \"For myself\", isCorrect: false},\r\n            ]\r\n        },\r\n//----------------------------Question 3------------------------------------------------------\r\n        {\r\n            questionText: <QuizQuestions\r\n                questionText=\"What is the mountain called where the ring is to be destroyed?\"\r\n            />,\r\n            answerOptions: [\r\n                {answerText: \"Mount Saron\", isCorrect: false},\r\n                {answerText: \"Mount Mordor\", isCorrect: false},\r\n                {answerText: \"Mount Orcs\", isCorrect: false},\r\n                {answerText: \"Mount Doom\", isCorrect: true},\r\n            ]\r\n        },\r\n//----------------------------Question 4------------------------------------------------------\r\n        {\r\n            questionText: <QuizQuestions\r\n                questionText=\"How long are all of TLOTR and The Hobbit movies combined?\"\r\n            />,\r\n            answerOptions: [\r\n                {answerText: \"1 Min\", isCorrect: false},\r\n                {answerText: \"3600 Min\", isCorrect: false},\r\n                {answerText: \"1865 Min\", isCorrect: false},\r\n                {answerText: sum + \" Min\", isCorrect: true},\r\n            ]\r\n        },\r\n    ]\r\n\r\n//----------------------Question Logics--------------------------------\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\n\r\n    const handleAnswerButtonClick = (isCorrect) => {\r\n        if (isCorrect === true) {\r\n            soundToggleMute.sound && sound1.play()\r\n        } else {\r\n            soundToggleMute.sound && sound3.play()\r\n        }\r\n\r\n\r\n        if (isCorrect === true) {\r\n            globalState.setScore(globalState.score + 10);\r\n        }\r\n\r\n        const nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion < questions.length) {\r\n            setCurrentQuestion(nextQuestion);\r\n            setCounter(30)\r\n        } else {\r\n            setShowScore(true);\r\n        }\r\n\r\n        setCurrentQuestion(nextQuestion);\r\n        if (nextQuestion < facts.length) {\r\n            setShowFact(true)\r\n        } else {\r\n            setShowFact(false)\r\n        }\r\n\r\n    }\r\n\r\n    //-----------------Saving Data------------------------------\r\n    function saveData() {\r\n        localStorage.setItem(`highscoreName${globalState.saveEdit}`, nameAvatarValue.name)\r\n        localStorage.setItem(`highscoreScore${globalState.saveEdit}`, globalState.score)\r\n\r\n        globalState.setSaveEdit(globalState.saveEdit + 1)\r\n\r\n        if (globalState.saveEdit > 10) {\r\n            globalState.setSaveEdit(0)\r\n        }\r\n        globalState.setScore(0)\r\n    }\r\n\r\n//----------------------Timer-----------------------------------\r\n    React.useEffect(() => {\r\n        const timer =\r\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n            if (counter === 0) {\r\n                const nextQuestion = currentQuestion + 1;\r\n                if (nextQuestion < questions.length) {\r\n                    setCurrentQuestion(nextQuestion);\r\n                    setCounter(30)\r\n                } else {\r\n                    setShowScore(true);\r\n                }\r\n                setCurrentQuestion(nextQuestion);\r\n                if (nextQuestion < facts.length) {\r\n                    setShowFact(true)\r\n                } else {\r\n                    setShowFact(false)\r\n                }\r\n            }\r\n        return () => clearInterval(timer) ;\r\n    }, [counter, currentQuestion, facts.length, questions.length]);\r\n\r\n//----------------------Display-------------------------------------\r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{scaleY: 0}}\r\n                animate={{scaleY: 1}}\r\n                exit={{scaleY: 0}}\r\n            >\r\n                <div className=\"randomFact\">\r\n                    {showFact ? (<>\r\n                            <h1 className=\"timerIcon-Facts\"><img id=\"timerIcon\" src={clock} alt=\"\"/> {counter}</h1>\r\n\r\n                            {characters ? (<div\r\n                                className=\"question-text\">{facts[currentQuestion].fact}</div>) : (\r\n                                <h1><img id=\"loadingIcon\" src={loadingBlade} alt=\"\"/></h1>)}\r\n\r\n                            <button className=\"showFactQuestionButton\" onClick={() => setShowFact(false)}>Show\r\n                                Question\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"questionLayout\">\r\n                            {showScore ? (\r\n                                <>\r\n                                    <motion.div\r\n                                        initial={{scaleY: 0}}\r\n                                        animate={{scaleY: 1}}\r\n                                        exit={{scaleY: 0}}\r\n                                        transition={{duration: 2}}\r\n                                    >\r\n                                        <div className=\"questionLayout\">\r\n                                            <div id=\"scoreEnding\">\r\n                                                <h2>{nameAvatarValue.name}{nameAvatarValue.avatar}</h2>\r\n                                                <div>You scored {globalState.score} out\r\n                                                    of {questions.length * 10} points!</div>\r\n                                            </div>\r\n                                            <NavLink to=\"/\">\r\n                                                <button className=\"mainButtonStyling\" onClick={saveData}>back</button>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </motion.div>\r\n                                </>\r\n\r\n                            ) : (\r\n                                <>\r\n                                    <div className=\"question-section\">\r\n\r\n                                        <div id=\"playerNamePosition\">\r\n                                            <h1>{nameAvatarValue.name}{nameAvatarValue.avatar}</h1>\r\n                                        </div>\r\n\r\n                                        <div id=\"timerIconPosition\">\r\n                                            <h1><img id=\"timerIcon\" src={clock} alt=\"\"/> {counter}</h1>\r\n                                        </div>\r\n\r\n                                        <div id=\"scorePosition\">\r\n                                            <h1 id=\"scoreStyling\">Score: {globalState.score}</h1>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"question-count\">\r\n                                        <span\r\n                                            style={{fontSize: 35}}>Question {currentQuestion + 1}/{questions.length}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"\">{questions[currentQuestion].questionText}</div>\r\n\r\n                                    <div id=\"showFactQuestionButtonPosition\">\r\n                                        <button className=\"showFactQuestionButton\"\r\n                                                onClick={() => setShowFact(true)}>Show Fact\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div className=\"answer-section\">\r\n                                        {questions[currentQuestion].answerOptions.map((answerOption) =>\r\n                                            <button className=\"quizButtonStyling\"\r\n                                                    onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>)}\r\n                                    </div>\r\n                                    <div>\r\n                                        <img id=\"quizSword2\" src={menuSword} alt=\"\"/>\r\n                                        <img id=\"quizSword1\" src={menuSword} alt=\"\"/>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {Howl} from \"howler\";\r\nimport swordDraw from \"../../audioclips/swordDraw.mp3\";\r\nimport {motion} from \"framer-motion\";\r\nimport { SoundContext } from \"../../App\";\r\nimport menuSword from \"../../assets/menuSword.png\";\r\n\r\nexport default function Highscore() {\r\n    const soundToggleMute = useContext(SoundContext);\r\n    const sound2 = new Howl({\r\n        src: [swordDraw],\r\n        autoplay: false,\r\n        volume: 0.2,\r\n\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <motion.div\r\n                initial={{scaleY: 0}}\r\n                animate={{scaleY: 1}}\r\n                exit={{scaleY: 0}}\r\n            >\r\n                <img id=\"menuSword1\" src={menuSword} alt=\"\"/>\r\n                <div className=\"StartMenuButtons\">\r\n                    <h1 id=\"highscoreTitle\">Highscores</h1>\r\n                    <div className=\"highscoreListStyling\">\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName0\")}  {localStorage.getItem(\"highscoreScore0\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName1\")}  {localStorage.getItem(\"highscoreScore1\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName2\")}  {localStorage.getItem(\"highscoreScore2\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName3\")}  {localStorage.getItem(\"highscoreScore3\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName4\")}  {localStorage.getItem(\"highscoreScore4\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName5\")}  {localStorage.getItem(\"highscoreScore5\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName6\")}  {localStorage.getItem(\"highscoreScore6\")}</h3>\r\n                        <h3 className=\"highscoreListItemStyling\">{localStorage.getItem(\"highscoreName7\")}  {localStorage.getItem(\"highscoreScore7\")}</h3>\r\n                    </div>\r\n\r\n                    <Link to=\"/\">\r\n                        <button className=\"mainButtonStyling\" onClick={() => {\r\n                            soundToggleMute.sound && sound2.play()\r\n                        }}>Back\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n                <img id=\"menuSword2\" src={menuSword} alt=\"\"/>\r\n            </motion.div>\r\n        </>\r\n    )\r\n}","import React, {createContext, useState} from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {AnimatePresence} from 'framer-motion'\r\n\r\nimport StartMenu from \"./pages/startMenu/StartMenu\"\r\nimport Inputpage from \"./pages/inputPage/InputPage\";\r\nimport OptionsPage from \"./pages/optionsPage/OptionsPage\";\r\nimport Quiz from \"./pages/quiz/Quiz\"\r\nimport Highscore from \"./pages/highscorePage/HighscorePage\";\r\nimport soundON from \"./assets/soundON.png\";\r\n\r\nexport const NameAvatarContext = createContext();\r\nexport const SoundContext = createContext();\r\nexport const GlobalStateContext = createContext();\r\n\r\n\r\nexport default function App() {\r\n    const [name, setName] = useState(\"\")\r\n    const [avatar, setAvatar] = useState(\"\")\r\n    const [sound, setSound] = useState(true)\r\n    const [score, setScore] = useState(0)\r\n    const [soundIcon, setSoundIcon] = useState(soundON)\r\n    const [saveEdit, setSaveEdit] = useState(0)\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"Root\">\r\n            <div className=\"startMenuDiv\">\r\n                <Router>\r\n                    <GlobalStateContext.Provider value={{score, setScore, saveEdit, setSaveEdit}}>\r\n                        <SoundContext.Provider value={{sound, setSound, soundIcon, setSoundIcon}}>\r\n                            <NameAvatarContext.Provider value={{name, setName, avatar, setAvatar}}>\r\n                                <AnimatePresence exitBeforeEnter>\r\n                                    <Switch>\r\n                                        <Route exact path=\"/\">\r\n                                            <StartMenu/>\r\n                                        </Route>\r\n\r\n                                        <Route path=\"/Quiz\">\r\n                                            <Quiz/>\r\n                                        </Route>\r\n\r\n                                        <Route path=\"/Highscore\">\r\n                                            <Highscore/>\r\n                                        </Route>\r\n\r\n                                        <Route path=\"/InputPage\">\r\n                                            <Inputpage/>\r\n                                        </Route>\r\n\r\n                                        <Route path=\"/OptionsPage\">\r\n                                            <OptionsPage/>\r\n                                        </Route>\r\n                                    </Switch>\r\n                                </AnimatePresence>\r\n                            </NameAvatarContext.Provider>\r\n                        </SoundContext.Provider>\r\n                    </GlobalStateContext.Provider>\r\n                </Router>\r\n            </div>\r\n        </div>\r\n    )\r\n        ;\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './components/Buttons.css'\r\nimport './pages/highscorePage/HighscorePage.css'\r\nimport './pages/inputPage/InputPage.css'\r\nimport './pages/optionsPage/OptionsPage.css'\r\nimport './pages/quiz/Quiz.css'\r\nimport './pages/startMenu/StartMenu.css'\r\nimport './fonts/fonts.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}